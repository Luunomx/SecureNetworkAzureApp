#!/bin/bash
set -e  # Avbryter skriptet vid fel

################################################################################
# Om du k√∂r i Git Bash p√• Windows, f√∂rhindra path-konvertering:
# export MSYS_NO_PATHCONV=1
################################################################################

# ==============================
# üîπ Variabler
# ==============================
RESOURCE_GROUP="SecureInfraRG"
LOCATION="northeurope"
COSMOS_DB_NAME="securecosmosdb$RANDOM"  # Slumpm√§ssigt suffix
VNET_NAME="SecureVNet"
SUBNET_NAME="AppSubnet"
PRIVATE_ENDPOINT_NAME="${COSMOS_DB_NAME}-pe"
PRIVATE_DNS_ZONE="privatelink.mongo.cosmos.azure.com"

# H√§mta prenumerations-ID
SUBSCRIPTION_ID=$(az account show --query "id" -o tsv)
if [[ -z "$SUBSCRIPTION_ID" ]]; then
  echo "‚ùå Du verkar inte vara inloggad. K√∂r 'az login' f√∂rst!"
  exit 1
fi
echo "‚úÖ Anv√§nder prenumeration: $SUBSCRIPTION_ID"

# ==============================
# üîπ 1. Skapa Cosmos DB med public access avst√§ngd
# ==============================
echo "üöÄ Skapar Cosmos DB: $COSMOS_DB_NAME..."
az cosmosdb create \
  --name "$COSMOS_DB_NAME" \
  --resource-group "$RESOURCE_GROUP" \
  --kind MongoDB \
  --server-version 4.0 \
  --locations regionName="$LOCATION" failoverPriority=0 \
  --default-consistency-level "Session" \
  --enable-multiple-write-locations false \
  --public-network-access "Disabled"

# ==============================
# üîπ 2. H√§mta Cosmos DB ID
# ==============================
COSMOS_DB_ID=$(az cosmosdb show --name "$COSMOS_DB_NAME" --resource-group "$RESOURCE_GROUP" --query "id" -o tsv)
if [[ -z "$COSMOS_DB_ID" ]]; then
  echo "‚ùå ERROR: Cosmos DB kunde inte skapas eller hittas."
  exit 1
fi
echo "‚úÖ Cosmos DB ID: $COSMOS_DB_ID"

# ==============================
# üîπ 3. Aktivera Virtual Network Filtering
# ==============================
echo "üîÑ Aktiverar Virtual Network Filtering p√• Cosmos DB..."
az cosmosdb update \
  --name "$COSMOS_DB_NAME" \
  --resource-group "$RESOURCE_GROUP" \
  --enable-virtual-network true
echo "‚úÖ Virtual Network Filtering aktiverat!"

# ==============================
# üîπ 4. H√§mta Subnet ID
# ==============================
SUBNET_ID=$(az network vnet subnet show --resource-group "$RESOURCE_GROUP" --vnet-name "$VNET_NAME" --name "$SUBNET_NAME" --query "id" -o tsv)
if [[ -z "$SUBNET_ID" ]]; then
  echo "‚ùå ERROR: Kunde inte hitta subnet $SUBNET_NAME i $VNET_NAME"
  exit 1
fi
echo "‚úÖ Subnet ID: $SUBNET_ID"

# ==============================
# üîπ 5. L√§gg till Subnet i Cosmos DB n√§tverksregler
# ==============================
echo "üîÑ L√§gger till Subnet i Cosmos DB n√§tverksregler..."
az cosmosdb network-rule add \
  --name "$COSMOS_DB_NAME" \
  --resource-group "$RESOURCE_GROUP" \
  --subnet "$SUBNET_NAME" \
  --vnet-name "$VNET_NAME"
echo "‚úÖ N√§tverksregel lagts till!"

# ==============================
# üîπ 6. Bygg Private Endpoint Resource ID manuellt
# ==============================
PRIVATE_CONNECTION_ID="/subscriptions/$SUBSCRIPTION_ID/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.DocumentDB/databaseAccounts/$COSMOS_DB_NAME"

# ==============================
# üîπ 7. Skapa Private Endpoint om den inte redan finns
# ==============================
PE_EXISTING=$(az network private-endpoint show --name "$PRIVATE_ENDPOINT_NAME" --resource-group "$RESOURCE_GROUP" --query "name" -o tsv 2>/dev/null || true)
if [[ -n "$PE_EXISTING" ]]; then
  echo "üîπ Private Endpoint $PRIVATE_ENDPOINT_NAME finns redan, hoppar √∂ver skapandet."
else
  echo "üöÄ Skapar Private Endpoint: $PRIVATE_ENDPOINT_NAME..."
  az network private-endpoint create \
    --name "$PRIVATE_ENDPOINT_NAME" \
    --resource-group "$RESOURCE_GROUP" \
    --vnet-name "$VNET_NAME" \
    --subnet "$SUBNET_NAME" \
    --private-connection-resource-id "$PRIVATE_CONNECTION_ID" \
    --group-ids "MongoDB" \
    --connection-name "${COSMOS_DB_NAME}-conn"
fi

# ==============================
# üîπ 8. Skapa Private DNS-zon om den inte redan finns
# ==============================
echo "üîÑ Kontrollerar om Private DNS-zon finns..."
EXISTING_DNS_ZONE=$(az network private-dns zone list \
  --resource-group "$RESOURCE_GROUP" \
  --query "[?name=='$PRIVATE_DNS_ZONE'].name" -o tsv)
if [[ -z "$EXISTING_DNS_ZONE" ]]; then
  echo "üöÄ Skapar Private DNS-zon: $PRIVATE_DNS_ZONE..."
  az network private-dns zone create \
    --resource-group "$RESOURCE_GROUP" \
    --name "$PRIVATE_DNS_ZONE"
else
  echo "üîπ Private DNS-zon $PRIVATE_DNS_ZONE finns redan, hoppar √∂ver skapandet."
fi

# ==============================
# üîπ 9. L√§nka DNS-zonen till VNet om l√§nken inte redan finns
# ==============================
DNS_LINK_EXISTS=$(az network private-dns link vnet list \
  --resource-group "$RESOURCE_GROUP" \
  --zone-name "$PRIVATE_DNS_ZONE" \
  --query "[?name=='${VNET_NAME}-dns-link']" -o tsv)
if [[ -z "$DNS_LINK_EXISTS" ]]; then
  echo "üîÑ L√§nkar Private DNS-zon till VNet..."
  az network private-dns link vnet create \
    --resource-group "$RESOURCE_GROUP" \
    --zone-name "$PRIVATE_DNS_ZONE" \
    --name "${VNET_NAME}-dns-link" \
    --virtual-network "$VNET_NAME" \
    --registration-enabled false
  echo "‚úÖ DNS-zon kopplad!"
else
  echo "üîπ DNS-l√§nk finns redan, hoppar √∂ver skapandet."
fi

# ==============================
# üîπ 10. V√§nta p√• att Private Endpoint √§r "Succeeded" och skapa DNS-poster
# ==============================
echo "V√§ntar p√• att Private Endpoint provisioningState blir 'Succeeded'..."
PE_STATE=""
while [ "$PE_STATE" != "Succeeded" ]; do
    sleep 5
    PE_STATE=$(az network private-endpoint show \
      --name "$PRIVATE_ENDPOINT_NAME" \
      --resource-group "$RESOURCE_GROUP" \
      --query "provisioningState" -o tsv)
done
echo "‚úÖ Private Endpoint provisioningState √§r nu 'Succeeded'!"

# H√§mta IP f√∂r huvuddom√§nen (customDnsConfigs[0])
PRIVATE_IP=$(az network private-endpoint show \
  --name "$PRIVATE_ENDPOINT_NAME" \
  --resource-group "$RESOURCE_GROUP" \
  --query "customDnsConfigs[0].ipAddresses[0]" -o tsv)
echo "‚úÖ Private Endpoint IP (huvuddom√§n): $PRIVATE_IP"

# Skapa DNS-post f√∂r huvuddom√§nen (ex: securecosmosdb9871)
echo "üîÑ Skapar DNS-post f√∂r huvuddom√§nen..."
EXISTING_DNS_RECORD=$(az network private-dns record-set a list \
  --resource-group "$RESOURCE_GROUP" \
  --zone-name "$PRIVATE_DNS_ZONE" \
  --query "[?name=='$COSMOS_DB_NAME']" -o tsv)

if [[ -z "$EXISTING_DNS_RECORD" ]]; then
  az network private-dns record-set a add-record \
    --resource-group "$RESOURCE_GROUP" \
    --zone-name "$PRIVATE_DNS_ZONE" \
    --record-set-name "$COSMOS_DB_NAME" \
    --ipv4-address "$PRIVATE_IP"
  echo "‚úÖ DNS-post skapad f√∂r huvuddom√§nen ($COSMOS_DB_NAME)!"
else
  echo "üîπ DNS-post f√∂r $COSMOS_DB_NAME finns redan, hoppar √∂ver skapandet."
fi

# ==============================
# üîπ 10b. Skapa DNS-post f√∂r region-specifik subdom√§n (ex: securecosmosdb9871-northeurope)
# ==============================
REGIONAL_PRIVATE_IP=$(az network private-endpoint show \
  --name "$PRIVATE_ENDPOINT_NAME" \
  --resource-group "$RESOURCE_GROUP" \
  --query "customDnsConfigs[1].ipAddresses[0]" -o tsv)

if [[ -n "$REGIONAL_PRIVATE_IP" ]]; then
  # Bygg subdom√§nnamnet (ex: "securecosmosdb9871-northeurope")
  REGIONAL_DB_NAME="${COSMOS_DB_NAME}-northeurope"
  echo "‚úÖ Private Endpoint IP (region-specifik): $REGIONAL_PRIVATE_IP"

  echo "üîÑ Skapar DNS-post f√∂r region-specifik subdom√§n..."
  EXISTING_REGIONAL_DNS_RECORD=$(az network private-dns record-set a list \
    --resource-group "$RESOURCE_GROUP" \
    --zone-name "$PRIVATE_DNS_ZONE" \
    --query "[?name=='$REGIONAL_DB_NAME']" -o tsv)

  if [[ -z "$EXISTING_REGIONAL_DNS_RECORD" ]]; then
    az network private-dns record-set a add-record \
      --resource-group "$RESOURCE_GROUP" \
      --zone-name "$PRIVATE_DNS_ZONE" \
      --record-set-name "$REGIONAL_DB_NAME" \
      --ipv4-address "$REGIONAL_PRIVATE_IP"
    echo "‚úÖ DNS-post skapad f√∂r $REGIONAL_DB_NAME!"
  else
    echo "üîπ DNS-post f√∂r $REGIONAL_DB_NAME finns redan, hoppar √∂ver skapandet."
  fi
else
  echo "üîπ Ingen region-specifik IP hittades (customDnsConfigs[1]). Skapar ingen extra DNS-post."
fi

# ==============================
# üîπ 11. Verifiera Private Endpoint
# ==============================
echo "‚úÖ Verifierar Private Endpoint..."
az network private-endpoint show \
  --name "$PRIVATE_ENDPOINT_NAME" \
  --resource-group "$RESOURCE_GROUP" \
  --query "provisioningState" -o tsv || echo "‚ùå Private Endpoint hittades ej."

# ==============================
# üîπ 12. Lista DNS-l√§nkar i zonen
# ==============================
echo "‚úÖ Verifierar DNS-l√§nk..."
az network private-dns link vnet list \
  --resource-group "$RESOURCE_GROUP" \
  --zone-name "$PRIVATE_DNS_ZONE" \
  -o table

echo "‚úÖ Cosmos DB: $COSMOS_DB_NAME √§r nu skapad med Private Endpoint!"
echo "üöÄ Klart!"
